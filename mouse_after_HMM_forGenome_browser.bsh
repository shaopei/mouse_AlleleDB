# use mouse_HMM.bsh to make necessary input files
cd /workdir/sc2457/mouse_AlleleSpecific/allelicbias-PersonalGenome_P.CAST_M.B6-LEP_ZYG_ATGCA_forAlleleDB/Tm_Tp_fixed_2
#then soft link necessary files to current dir
#ln -s ../counts_hmm.txt .
#ln -s ../counts_plus_hmm.txt .
#ln -s ../counts_minus_hmm.txt .

python hmm_spc.py counts_hmm.txt counts_plus_hmm.txt counts_minus_hmm.txt 22


PL=/workdir/sc2457/alleleDB/alleledb_pipeline_mouse
MAPS=/workdir/sc2457/mouse_AlleleSpecific/mouse_genome.sanger.ac.uk/REL-1505-SNPs_Indels/PersonalGenome_P.CAST_M.B6_indelsNsnps_CAST.bam/%s_P.CAST.EiJ_M.C57BL.6J.map
PREFIX=LEP_ZYG_ATGCA_forAlleleDB
MATBOWTIE=${PREFIX}.mat.bowtie
PATBOWTIE=${PREFIX}.pat.bowtie
FDR_SIMS=10
FDR_CUTOFF=0.1
#MODIFIER=TmpFixed

#ln -s ../${PATBOWTIE}_AMBremoved_sorted_specific.map2ref.sorted.bed .
#ln -s ../${MATBOWTIE}_AMBremoved_sorted_specific.map2ref.sorted.bed .
#ln -s ../${PATBOWTIE}_AMBremoved_sorted_identical.map2ref.sorted.bed .
#ln -s ../sum_of_counts.py .
#ln -s ../LEP_ZYG_ATGCA.dREG.peak.score.bed.gz .
#ln -s ../getFractionOfBlock_DistanceToNearestSites.R .

dREG_peak_score=out.dREG.peak.full.bed.gz
dREG_peak_score_plus=tss_paired_LEP_ZYG_ATGCA_dREG_plus.bed
dREG_peak_score_minus=tss_paired_LEP_ZYG_ATGCA_dREG_minus.bed

### counts the maternal, paternal reads, and the reads that cannot tell where it from, in the regions of hmm predictions
# perform BinomialTest and filter by FDR<= FDR_CUTOFF
for f in counts_*_hmm_regions_t*.bed;
	do j=`echo $f| rev | cut -d \. -f 2- |rev`
bedtools coverage -a $f -b ${MATBOWTIE}_AMBremoved_sorted_specific.map2ref.sorted.bed -s | awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3, $0}' |LC_ALL=C sort -k1,1 --parallel=30 > ${j}.mat_cov.bed &
bedtools coverage -a $f -b ${PATBOWTIE}_AMBremoved_sorted_specific.map2ref.sorted.bed -s | awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3, $0}' |LC_ALL=C sort -k1,1 --parallel=30 > ${j}.pat_cov.bed &
wait
join -t $'\t' -j 1 -o 1.1,1.2,1.3,1.4,1.5,1.8,2.8 ${j}.mat_cov.bed ${j}.pat_cov.bed > ${j}.temp_cov.bed &
bedtools coverage -a $f -b ${PATBOWTIE}_AMBremoved_sorted_identical.map2ref.sorted.bed -s | awk 'BEGIN {OFS="\t"; t="_"} {print $1t$2t$3, $0}' |LC_ALL=C sort -k1,1 --parallel=30 > ${j}.iden_cov.bed &
wait
join -t $'\t' -j 1 -o 1.2,1.3,1.4,1.5,1.6,1.7,2.8 ${j}.temp_cov.bed ${j}.iden_cov.bed | LC_ALL=C sort -k1,1n -k2,2n --parallel=30 > ${j}.merged_cov.bed
rm ${j}.temp_cov.bed ${j}.mat_cov.bed ${j}.pat_cov.bed ${j}.iden_cov.bed
python ${PL}/BinomialTestFor_merged_cov.bed.py ${j}.merged_cov.bed ${j}.merged_cov_binomtest.bed
rm ${j}.merged_cov.bed
# output of BinomialTestFor_merged_cov.bed.py:(hmm+BinomialTest) if p-value <= 0.05, remain what it got from hmm (can ne M,P, or S), otherwise S.
python ${PL}/FalsePosFor_merged_cov.bed.py ${j}.merged_cov_binomtest.bed ${FDR_SIMS} ${FDR_CUTOFF} > ${j}.merged_cov_binomtest_FDR.txt
awk 'NR==1 { print $0 } NR>1 && $9 <= thresh { print $0 }'  thresh=$(awk 'END {print $6}' ${j}.merged_cov_binomtest_FDR.txt) < ${j}.merged_cov_binomtest.bed > ${j}_interestingHets.bed
done


### make bed with only the 5prime head reads
for f in counts_*_hmm_regions_t*_interestingHets.bed;
	do echo $f
j=`echo $f| rev | cut -d \. -f 2- |rev |cut -d _ -f 3-`
strand=`echo $f|cut -d _ -f 2`
echo $strand $j
# filter and only keep M and P, use the state from hmm(hmm_state, Not hmm+BinomialTest ), which binomial test pass FDR <0.1
if [ ${strand} == "minus" ]
then cat counts_minus_${j}.bed | awk 'BEGIN {OFS="\t"; t=","; s="-";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $4!="S" {print c$1,$3-1,$3,$4t$6t$7, 111, s}' > counts_${j}_5head.bed
else
cat counts_plus_${j}.bed | awk 'BEGIN {OFS="\t"; t=","; s="+";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $4!="S"  {print c$1,$2,$2+1,$4t$6t$7, 111, s}' >> counts_${j}_5head.bed
fi

# distance to the closet upstream dReg sites.
# -D a Report distance with respect to A.
# -id Ignore features in B that are downstream of features in A. 
# check both end, no id

bedtools closest -D a -a <(cat counts_${j}_5head.bed | awk 'BEGIN {OFS="\t"} NR!=1 {print $0}' | LC_ALL=C sort -k1,1 -k2,2n --parallel=30) -b LEP_ZYG_ATGCA.dREG.peak.score.bed.gz \
|awk '($11<0){print $11*(-1)}; ($11>=0) {print $11}' | LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -n | uniq -c >  counts_${j}_5head_distance_toclosest-dReg_Counts.txt
python sum_of_counts.py counts_${j}_5head_distance_toclosest-dReg_Counts.txt `awk 'END {print $2}' counts_${j}_5head_distance_toclosest-dReg_Counts.txt` > counts_${j}_5head_distance_toclosest-dReg_AccumulateCounts.txt 

done


### make figures
R --vanilla --slave --args $(pwd) "counts_hmm_regions_t*_interestingHets_5head_distance_toclosest-dReg_AccumulateCounts.txt" counts_hmm_regions_tX_interestingHets_5head_distance_toclosest-dReg_AccumulateCounts.pdf counts_hmm_regions_tX_interestingHets_5head_distance_toclosest-dReg_At5Kb.pdf < getFractionOfBlock_DistanceToNearestSites.R

####END of analysis ######

#check counts_minus_hmm_regions_t1e-05_interestingHets.bed and counts_plus_hmm_regions_t1e-05_interestingHets.bed in genome browser
# keep fdr <= 0.1 and state is P or M
cat counts_minus_hmm_regions_t1e-05_interestingHets.bed | awk 'BEGIN {OFS="\t"; t=","; s="-";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $4=="P"  {print c$1,$2,$3,$4t$6t$7, 999, s}
NR>1 && $4=="M"  {print c$1,$2,$3,$4t$6t$7, 111, s}' > counts_minus_hmm_regions_t1e-05_interestingHets_IGV.bed

cat counts_plus_hmm_regions_t1e-05_interestingHets.bed | awk 'BEGIN {OFS="\t"; t=","; s="+";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $4=="P"  {print c$1,$2,$3,$4t$6t$7, 999, s}
NR>1 && $4=="M"  {print c$1,$2,$3,$4t$6t$7, 111, s}' > counts_plus_hmm_regions_t1e-05_interestingHets_IGV.bed

# keep S, with whatever fdr, for comparison
cat counts_minus_hmm_regions_t1e-05.merged_cov_binomtest.bed | awk 'BEGIN {OFS="\t"; t=","; s="-";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $5=="S"  {print c$1,$2,$3,$4t$6t$7, 999, s}' > counts_minus_hmm_regions_t1e-05_merged_cov_IGV_S.bed
cat counts_plus_hmm_regions_t1e-05.merged_cov_binomtest.bed | awk 'BEGIN {OFS="\t"; t=","; s="+";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $5=="S"  {print c$1,$2,$3,$4t$6t$7, 999, s}' > counts_plus_hmm_regions_t1e-05_merged_cov_IGV_S.bed

# use t=9 for comparison
t=9
cat counts_minus_hmm_regions_t1e-0${t}_interestingHets.bed | awk 'BEGIN {OFS="\t"; t=","; s="-";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $4=="P"  {print c$1,$2,$3,$4t$6t$7, 999, s}
NR>1 && $4=="M"  {print c$1,$2,$3,$4t$6t$7, 111, s}' > counts_minus_hmm_regions_t1e-0${t}_interestingHets_IGV.bed
cat counts_plus_hmm_regions_t1e-0${t}_interestingHets.bed | awk 'BEGIN {OFS="\t"; t=","; s="+";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $4=="P"  {print c$1,$2,$3,$4t$6t$7, 999, s}
NR>1 && $4=="M"  {print c$1,$2,$3,$4t$6t$7, 111, s}' > counts_plus_hmm_regions_t1e-0${t}_interestingHets_IGV.bed



#### find concordant and discordant regions
# keep fdr <= 0.1 and state is P or M, 
# check if the HMM and the Actual count agree on the winning parents. Filter out those do NOT agree, ex: M,44,63 HMM call M, but have more pat reads than mat reads
# this can also used for IGV viewing
# for T in {1..5}; do

cat counts_minus_hmm_regions_t1e-0${T}_interestingHets.bed | awk 'BEGIN {OFS="\t"; t=","; s="-";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
#NR>1 && $4=="P" && $7>$6 {print c$1,$2,$3,$4t$6t$7, 999, s}
#NR>1 && $4=="M" && $6>$7 {print c$1,$2,$3,$4t$6t$7, 111, s}
NR>1 && $4!="S" {print c$1,$2,$3,$4t$6t$7, 111, s}' > counts_minus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed
cat counts_plus_hmm_regions_t1e-0${T}_interestingHets.bed | awk 'BEGIN {OFS="\t"; t=","; s="+";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
#NR>1 && $4=="P" && $7>$6 {print c$1,$2,$3,$4t$6t$7, 999, s}
#NR>1 && $4=="M" && $6>$7 {print c$1,$2,$3,$4t$6t$7, 111, s}
NR>1 && $4!="S" {print c$1,$2,$3,$4t$6t$7, 111, s}' > counts_plus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed

####Correlations between the ratio of maternal and paternal alleles within HMM regions between plus and minus strands???
#cat counts_minus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed | awk 'NR>1 {print $1 substr($4,1,1)}'|sort|uniq -c
#cat counts_plus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed | awk 'NR>1 {print $1 substr($4,1,1)}'|sort|uniq -c

##### identify Concordant and Discordant regions
# identify hmm regions within 150bp(d) downstream TSS
# d is the length to identify Allele Specific regions from each TSS. For plus TSS, the end of TSS to that(the end of TSS) +d
# dRegion=250 (the length to keep in the Con_Dis regions), the legnth of the regions is (dRegion + distance_between_TSS + dRegion)


## sort Tss regions, only need to do once
dREG_peak_score=out.dREG.peak.full.bed.gz
dREG_peak_score_plus=tss_paired_LEP_ZYG_ATGCA_dREG_plus.bed
dREG_peak_score_minus=tss_paired_LEP_ZYG_ATGCA_dREG_minus.bed
#zcat ${dREG_peak_score} | awk 'BEGIN{OFS="\t"} {print $1, $7, $3, $4,$5, "+"}' |LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -V > ${dREG_peak_score_plus}
#zcat ${dREG_peak_score} | awk 'BEGIN{OFS="\t"} {print $1, $2, $7, $4,$5, "-"}' |LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -V > ${dREG_peak_score_minus}

# Concordant
d=150
join -t $'\t' -j 1 -o 1.2,1.3,1.4,1.11,1.14,2.2,2.3,2.4,2.11,2.14 <(bedtools closest -iu -D a -a ${dREG_peak_score_plus} -b counts_plus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed| awk 'BEGIN {OFS="\t";t="_"}{print $1t$2, $0}') <(bedtools closest -iu -D a -a ${dREG_peak_score_minus} -b counts_minus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed|awk 'BEGIN {OFS="\t";t="_"}{print $1t$3, $0}')\
|awk -v d=$d '($5 != -1 && $10 !=-1 && $5<=d && $10<=d) {print $0}' | awk '(substr($4,1,1) == substr($9,1,1)){print $0} ' | wc -l
#join -t $'\t' -j 1 -o 1.2,1.3,1.4,1.11,1.14,2.2,2.3,2.4,2.11,2.14 <(bedtools closest -iu -D a -a ${dREG_peak_score_plus} -b counts_plus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed| awk 'BEGIN {OFS="\t";t="_"}{print $1t$2, $0}') <(bedtools closest -iu -D a -a ${dREG_peak_score_minus} -b counts_minus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed|awk 'BEGIN {OFS="\t";t="_"}{print $1t$3, $0}')\
#|awk -v d=$d '($5 != -1 && $10 !=-1 && $5<=d && $10<=d) {print $0}' | awk '(substr($4,1,1) == substr($9,1,1)){print $0} '

# Discordant
join -t $'\t' -j 1 -o 1.2,1.3,1.4,1.11,1.14,2.2,2.3,2.4,2.11,2.14 <(bedtools closest -iu -D a -a ${dREG_peak_score_plus} -b counts_plus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed| awk 'BEGIN {OFS="\t";t="_"}{print $1t$2, $0}') <(bedtools closest -iu -D a -a ${dREG_peak_score_minus} -b counts_minus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed|awk 'BEGIN {OFS="\t";t="_"}{print $1t$3, $0}')\
|awk -v d=$d '($5 != -1 && $10 !=-1 && $5<=d && $10<=d) {print $0}' | awk '(substr($4,1,1) != substr($9,1,1)){print $0} ' | wc -l

d=150
# put Con and Dis together
echo -e "chrm\tchrmStart\tchrmEnd\tCon_Dis\tPlusStrandState\tMinusStrandState" > Con_Dis_regions_t1e-0${T}.bed
join -t $'\t' -j 1 -o 1.2,1.3,1.4,1.11,1.14,2.2,2.3,2.4,2.11,2.14 <(bedtools closest -iu -D a -a ${dREG_peak_score_plus} -b counts_plus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed| awk 'BEGIN {OFS="\t";t="_"}{print $1t$2, $0}') <(bedtools closest -iu -D a -a ${dREG_peak_score_minus} -b counts_minus_hmm_regions_t1e-0${T}_interestingHets_IGV.bed|awk 'BEGIN {OFS="\t";t="_"}{print $1t$3, $0}')\
|awk -v d=$d '($5 != -1 && $10 !=-1 && $5<=d && $10<=d) {print $0}' | awk 'BEGIN {OFS="\t"; C="Con"; D="Dis"} (substr($4,1,1) != substr($9,1,1)){print$1,$7-250,$3+250, D, $4, $9}; (substr($4,1,1) == substr($9,1,1)){print$1,$7-250,$3+250, C, $4, $9} '>> Con_Dis_regions_t1e-0${T}.bed

# Concordant plus and minus change in the same direction, Discordant change in opposite direction.
# filter the Concordant region to remove the Regions with large difference between plus and minus strand (although same direction, but different in amplitude).
R --vanilla --slave --args $(pwd) Con_Dis_regions_t1e-0${T}.bed < Con_Dis_hmm_scatterplot.R
# oupput is Con_Dis_regions_t1e-0${T}_ConFiltered.bed 

##################
# Motif analysis #
##################
mkdir Motif_SNPs_Anaylsis_t1e-0${T}
# identify SNPs overlap with Concordant or Discordant regions
intersectBed -wa -a /workdir/sc2457/mouse_AlleleSpecific/mouse_genome.sanger.ac.uk/REL-1505-SNPs_Indels/PersonalGenome_P.CAST_M.B6_indelsNsnps_CAST.bam/P.CAST_M.B6_indelsNsnps_CAST.bam.alleleDBInput.snp.sorted.bed -b Con_Dis_regions_t1e-0${T}_ConFiltered.bed > Motif_SNPs_Anaylsis_t1e-0${T}/Con_Dis_regions_t1e-0${T}_ConFiltered.snp.bed  

cd Motif_SNPs_Anaylsis_t1e-0${T}
grep Con ../Con_Dis_regions_t1e-0${T}_ConFiltered.bed > Concordant.bed
grep Dis ../Con_Dis_regions_t1e-0${T}_ConFiltered.bed > Discordant.bed

# use rtfbsdb to scan the concrdant and discordant region for motif
PL=/workdir/sc2457/tools/After_AlleleDB_pipeline
export R_LIBS=/home/zw355/R/x86_64-unknown-linux-gnu-library/3.1
#export R_LIBS=/home/sc2457/R/x86_64-pc-linux-gnu-library/3.3
R --vanilla --slave --args $(pwd) ../Con_Dis_regions_t1e-0${T}_ConFiltered.bed < ${PL}/rtfbsdb_scan.R

unstarch scan.db.db.starch >scan.db.db.starch.unstarched

for tf in `cat tfbs.scanTFsite.summary |awk '(NR>1){print $3}'|sort |uniq`
do
  # a specific TF
  for motif in  `grep $tf tfbs.scanTFsite.summary | awk '{print $2}' `
    do grep ${motif} scan.db.db.starch.unstarched >> tfbs.scanTFsite_${tf}
  done
  ### need to merge the bed regions !!! TO DO!!!
  cat tfbs.scanTFsite_${tf} |awk 'BEGIN {OFS="\t"} {print $1, $2, $3}'|LC_ALL=C sort -V  |uniq > tfbs.scanTFsite_${tf}_uniq
  # identify motif sites overlap with SNPs
  # might have duplicates of binding sites due to more than one SNP is a region, but this will be taken care later in the pipeline
  intersectBed -wa -a tfbs.scanTFsite_${tf}_uniq -b Con_Dis_regions_t1e-0${T}_ConFiltered.snp.bed > tfbs.scanTFsite_${tf}_wSNP.bed &
done

mkdir toremove
mv TF_SNP_Motif_count toremove/.
for tf in `cat tfbs.scanTFsite.summary |awk '(NR>1){print $3}'|sort |uniq`
do
  # calculate Dis_SNP, Dis_Motif,Con_SNP, Con_Motif
  echo ${tf} >> TF_SNP_Motif_count
  # Dis_SNP, the number of Discordant regions with motif(s) that overlaps with SNP
  intersectBed -wa -wb -a tfbs.scanTFsite_${tf}_wSNP.bed -b Discordant.bed | awk '{print $4, $5, $6}' |sort |uniq |wc -l >> TF_SNP_Motif_count
  # Dis_Motif, the number of Discordant regions with motif(s) (with or without SNP)
  intersectBed -wa -wb -a tfbs.scanTFsite_${tf}_uniq -b Discordant.bed | awk '{print $4, $5, $6}' |sort |uniq |wc -l >> TF_SNP_Motif_count
  # Con_SNP, the number of Concordant regions with motif(s) that overlaps with SNP
  intersectBed -wa -wb -a tfbs.scanTFsite_${tf}_wSNP.bed -b Concordant.bed | awk '{print $4, $5, $6}' |sort |uniq |wc -l >> TF_SNP_Motif_count
  # Con_Motif, the number of Concordant regions with motif(s) (with or without SNP)
  intersectBed -wa -wb -a tfbs.scanTFsite_${tf}_uniq -b Concordant.bed | awk '{print $4, $5, $6}' |sort |uniq |wc -l >> TF_SNP_Motif_count
done



python ${PL}/FisherExactTest_Motif_SNPs.py TF_SNP_Motif_count
R --vanilla --slave --args $(pwd) Fisher_excat_test.txt < ${PL}/FisherExactTest_Motif_SNPs_volcano.R 


mv Concordant.bed Discordant.bed toremove/.
mv tfbs.scanTFsite_* toremove/.


#make bed for http://epigenomegateway.wustl.edu/
#FDR < = 0.1
#Keep what it got from hmm (can be M,P, or S), NOT from binomial test
cd /local/ftp/pub/hub/sc2457/germ_cell_mm10


j=`echo ${PREFIX}| rev| cut -d _ -f 2- |rev`
cat allelicbias-PersonalGenome_P.CAST_M.B6-${PREFIX}/counts_minus_hmm_regions_interestingHets.bed | awk 'BEGIN {OFS="\t"; t=","; s="-";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $4=="P"  {print c$1,$2,$3,$4t$6t$7, 999, s}
NR>1 && $4=="M"  {print c$1,$2,$3,$4t$6t$7, 111, s}' > ${j}_minus_hmm_regions_fdr0.1_${MODIFIER}.bed
bgzip ${j}_minus_hmm_regions_fdr0.1_${MODIFIER}.bed -f
tabix -p bed ${j}_minus_hmm_regions_fdr0.1_${MODIFIER}.bed.gz -f 

cat allelicbias-PersonalGenome_P.CAST_M.B6-${PREFIX}/counts_minus_hmm_regions_interestingHets.bed | awk 'BEGIN {OFS="\t"; t=","; s="-";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $4!="S"  {print c$1,$2,$3,$4t$6t$7, 111, s}' > ${j}_minus_hmm_regions_fdr0.1_${MODIFIER}.bed
bgzip ${j}_minus_hmm_regions_fdr0.1_${MODIFIER}.bed -f
tabix -p bed ${j}_minus_hmm_regions_fdr0.1_${MODIFIER}.bed.gz -f 

cat allelicbias-PersonalGenome_P.CAST_M.B6-${PREFIX}/counts_plus_hmm_regions_interestingHets.bed | awk 'BEGIN {OFS="\t"; t=","; s="+";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $4!="S" {print c$1,$2,$3,$4t$6t$7, 111, s }' \
> ${j}_plus_hmm_regions_fdr0.1_${MODIFIER}.bed
bgzip ${j}_plus_hmm_regions_fdr0.1_${MODIFIER}.bed -f
tabix -p bed ${j}_plus_hmm_regions_fdr0.1_${MODIFIER}.bed.gz -f

cat allelicbias-PersonalGenome_P.CAST_M.B6-${PREFIX}/counts_plus_hmm_regions_interestingHets.bed | awk 'BEGIN {OFS="\t"; t=","; s="+";c="chr"} NR==1 { print $1,$2,$3,$4t$6t$7, 111, s} 
NR>1 && $4!="S" {print c$1,$2,$3,$4t$6t$7, 111, s }' \
> test2.bed
bgzip test2.bed -f
tabix -p bed test2.bed.gz -f


### keep the 5prime head of bed files
zcat ${j}_*_hmm_regions_fdr0.1_${MODIFIER}.bed.gz | awk 'BEGIN {OFS="\t"; t=","; s="-";c="chr"} NR==1 { print $0} 
NR>1 && $6=="+"  {print $1,$2,$2+1,$4, $5, $6}
NR>1 && $6=="-"  {print $1,$3-1,$3,$4, $5, $6}' 

# distance to the closet upstream dReg sites -id Ignore features in B that are downstream of features in A.
# -D a Report distance with respect to A.

bedtools closest -id -D a -a <(zcat ${j}_*_hmm_regions_fdr0.1_${MODIFIER}.bed.gz | awk 'BEGIN {OFS="\t"; t=","; s="-";c="chr"} NR==1 {print $0} 
NR>1 && $6=="+"  {print $1,$2,$2+1,$4, $5, $6} NR>1 && $6=="-"  {print $1,$3-1,$3,$4, $5, $6}' | LC_ALL=C sort -k1,1 -k2,2n --parallel=30) -b LEP_ZYG_ATGCA.dREG.peak.score.bed.gz \
|awk '($11<0){print $11*(-1)}; ($11>=0) {print $11}' | LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -n | uniq -c >  ${j}_hmm_regions_fdr0.1_${MODIFIER}_distance_toclosest-id-dReg_Counts.txt
python sum_of_counts.py ${j}_hmm_regions_fdr0.1_${MODIFIER}_distance_toclosest-id-dReg_Counts.txt `awk 'END {print $2}' ${j}_hmm_regions_fdr0.1_${MODIFIER}_distance_toclosest-id-dReg_Counts.txt` > ${j}_hmm_regions_fdr0.1_${MODIFIER}_distance_toclosest-id-dReg_AccumulateCounts.txt 

bedtools closest -D a -a <(zcat ${j}_*_hmm_regions_fdr0.1_${MODIFIER}.bed.gz | awk 'BEGIN {OFS="\t"; t=","; s="-";c="chr"} NR==1 {print $0} 
NR>1 && $6=="+"  {print $1,$2,$2+1,$4, $5, $6} NR>1 && $6=="-"  {print $1,$3-1,$3,$4, $5, $6}' | LC_ALL=C sort -k1,1 -k2,2n --parallel=30) -b LEP_ZYG_ATGCA.dREG.peak.score.bed.gz \
|awk '($11<0){print $11*(-1)}; ($11>=0) {print $11}' | LC_ALL=C sort --temporary-directory=/workdir/sc2457/tmp/ --parallel=10 -n | uniq -c >  ${j}_hmm_regions_fdr0.1_${MODIFIER}_distance_toclosest-dReg_Counts.txt
python sum_of_counts.py ${j}_hmm_regions_fdr0.1_${MODIFIER}_distance_toclosest-dReg_Counts.txt `awk 'END {print $2}' ${j}_hmm_regions_fdr0.1_${MODIFIER}_distance_toclosest-dReg_Counts.txt` > ${j}_hmm_regions_fdr0.1_${MODIFIER}_distance_toclosest-dReg_AccumulateCounts.txt 




